name: AppImage Build

on:
  push:
    branches:
      - rewrite
    paths-ignore:
      # Ignore code files.
      - 'HedgeModManager/Resources/Codesv2/**'

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./HedgeModManager.sln

jobs:
  build:
    name: ${{matrix.configuration}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
        dotnet-version: ['6']

    steps:
    - uses: actions/checkout@v2.5.0

    - name: Add Git hash to resources
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: echo ${{github.sha}} > HedgeModManager/Resources/Version.txt
    
    - name: Install Mono for .NET Framework
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        sudo apt install gnupg ca-certificates
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
        sudo apt update
        sudo apt install mono-devel
        cd /usr/lib/mono
        ls
        export FrameworkPathOverride=/usr/lib/mono/4.7.2-api
        echo $FrameworkPathOverride

    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      # See https://github.com/actions/setup-dotnet/blob/main/README.md
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Dotnet Publish
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # See https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
      run: dotnet msbuild -m -property:FrameworkPathOverride=/usr/lib/mono/4.7.2-api -property:Configuration=${{matrix.configuration}} -property:RuntimeIdentifiers=linux-x64 -property:OutputPath="AppImages/AppDir/usr/bin" ${{env.SOLUTION_FILE_PATH}}

    #- name: Package as AppImage
    #  working-directory: ${{env.GITHUB_WORKSPACE}}
    #  Use the AppImage helper to package into an AppImage file.
    #  run:   

    - uses: actions/upload-artifact@v3.1.1
      with:
        name: HedgeModManager-${{matrix.configuration}}
        path: ${{github.workspace}}
